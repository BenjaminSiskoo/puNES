diff -upNr lib7zip-53abfeb.org/CMakeLists.txt lib7zip-53abfeb/CMakeLists.txt
--- lib7zip-53abfeb.org/CMakeLists.txt	2021-05-26 22:04:41.000000000 +0200
+++ lib7zip-53abfeb/CMakeLists.txt	2021-12-29 18:32:06.823795378 +0100
@@ -1,4 +1,4 @@
-CMAKE_MINIMUM_REQUIRED(VERSION 2.8)
+CMAKE_MINIMUM_REQUIRED(VERSION 3.13)
 
 CMAKE_POLICY(
     SET CMP0048 NEW
@@ -25,7 +25,7 @@ ENDIF()
 SET(CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} "${CMAKE_CURRENT_SOURCE_DIR}/cmake/Modules/")
 
 OPTION(BUILD_SHARED_LIB "build shared library" OFF)
-SET(P7ZIP_SOURCE_DIR "${CMAKE_CURRENT_SOURCE_DIR}/third_party/p7zip" CACHE PATH "pzip/7zip source code path")
+SET(P7ZIP_SOURCE_DIR "" CACHE PATH "pzip/7zip source code path")
 
 IF (NOT IS_DIRECTORY ${P7ZIP_SOURCE_DIR})
   MESSAGE(FATAL_ERROR "must proivde p7zip/7zip source path using -DP7ZIP_SOURCE_DIR")
@@ -39,11 +39,14 @@ SET(P7ZIP_INCLUDE_PATH   "${P7ZIP_SOURCE
 
 
 if ("${CMAKE_CXX_COMPILER_ID}" STREQUAL "GNU")
-  set(warnings -Wall -Wextra -Werror -Wno-unused-parameter)
-  set(cxx_warnings -Wno-class-memaccess)
+  #set(warnings -Wall -Wextra -Werror -Wno-unused-parameter)
+  #set(cxx_warnings -Wno-class-memaccess)
+  set(warnings "")
+  set(cxx_warnings "")
   set(no_undefined -Wl,--no-undefined)
 elseif ("${CMAKE_CXX_COMPILER_ID}" STREQUAL "Clang")
-  set(warnings -Wall -Wextra -Werror -Wno-inconsistent-missing-override -Wno-unused-parameter)
+  #set(warnings -Wall -Wextra -Werror -Wno-inconsistent-missing-override -Wno-unused-parameter)
+  set(warnings "")
   set(cxx_warnings "")
   set(no_undefined -Wl,-undefined,error)
 elseif ("${CMAKE_CXX_COMPILER_ID}" STREQUAL "MSVC")
@@ -56,9 +59,14 @@ SET(CXX_STANDARD_REQUIRED OFF)
 SET(CXX_EXTENSION NO)
 
 if (NOT CONFIGURED_ONCE)
+if ("${CMAKE_C_PLATFORM_ID}" STREQUAL "MinGW")
+  ADD_COMPILE_OPTIONS(-DUNICODE -D_UNICODE -DWIN32)
+endif()
 ADD_COMPILE_OPTIONS(-fPIC -std=c++14 ${warnings} ${cxx_warnings})
 ADD_LINK_OPTIONS(${no_undefined})
 endif()
 
 ADD_SUBDIRECTORY(src)
-ADD_SUBDIRECTORY(test)
+#ADD_SUBDIRECTORY(test)
+
+install(FILES dummy DESTINATION bin OPTIONAL)
diff -upNr lib7zip-53abfeb.org/.gitignore lib7zip-53abfeb/.gitignore
--- lib7zip-53abfeb.org/.gitignore	2021-05-26 22:04:41.000000000 +0200
+++ lib7zip-53abfeb/.gitignore	1970-01-01 01:00:00.000000000 +0100
@@ -1,46 +0,0 @@
-.*\.pbxuser
-.*\.perspectivev.?
-\.DS_Store
-build$
-linux-build$
-\.svn
-depcomp$
-missing$
-install-sh$
-autom4te\.cache$
-Makefile\.in$
-aclocal\.m4$
-\.deps$
-config\.log$
-configure$
-config\.status$
-Makefile$
-includes/C$
-includes/CPP$
-.*\.o
-.*\.a
-.*\.lo
-.*\.la
-.*\.so\.?.*
-m4/.*
-libtool
-config.guess
-config.sub
-ltmain.sh
-# http://www.gnu.org/software/automake
-
-Makefile.in
-
-# http://www.gnu.org/software/autoconf
-
-/autom4te.cache
-/aclocal.m4
-/compile
-/configure
-/depcomp
-/install-sh
-/missing
-/stamp-h1
-/ar-lib
-/m4
-/build
\ Manca newline alla fine del file
diff -upNr lib7zip-53abfeb.org/.gitmodules lib7zip-53abfeb/.gitmodules
--- lib7zip-53abfeb.org/.gitmodules	2021-05-26 22:04:41.000000000 +0200
+++ lib7zip-53abfeb org/.gitmodules	1970-01-01 01:00:00.000000000 +0100
@@ -1,3 +0,0 @@
-[submodule "third_party/p7zip"]
-	path = third_party/p7zip
-	url = https://github.com/jinfeihan57/p7zip.git
diff -upNr lib7zip-53abfeb.org/.hgignore lib7zip-53abfeb/.hgignore
--- lib7zip-53abfeb.org/.hgignore	2021-05-26 22:04:41.000000000 +0200
+++ lib7zip-53abfeb/.hgignore	1970-01-01 01:00:00.000000000 +0100
@@ -1,29 +0,0 @@
-.*\.pbxuser
-.*\.perspectivev.?
-\.DS_Store
-build$
-linux-build$
-\.svn
-depcomp$
-missing$
-install-sh$
-autom4te\.cache$
-Makefile\.in$
-aclocal\.m4$
-\.deps$
-config\.log$
-configure$
-config\.status$
-Makefile$
-includes/C$
-includes/CPP$
-.*\.o
-.*\.a
-.*\.lo
-.*\.la
-.*\.so\.?.*
-m4/.*
-libtool
-config.guess
-config.sub
-ltmain.sh
\ Manca newline alla fine del file
diff -upNr lib7zip-53abfeb.org/src/7ZipFormatInfo.cpp lib7zip-53abfeb/src/7ZipFormatInfo.cpp
--- lib7zip-53abfeb.org/src/7ZipFormatInfo.cpp	2021-05-26 22:04:41.000000000 +0200
+++ lib7zip-53abfeb/src/7ZipFormatInfo.cpp	2021-12-29 18:31:45.681682054 +0100
@@ -4,6 +4,7 @@
 #endif
 
 #include "C/7zVersion.h"
+#include "CPP/Common/Common.h"
 #include "CPP/7zip/Archive/IArchive.h"
 #include "CPP/Windows/PropVariant.h"
 #include "CPP/Common/MyCom.h"
diff -upNr lib7zip-53abfeb.org/src/7ZipObjectPtrArray.cpp lib7zip-53abfeb/src/7ZipObjectPtrArray.cpp
--- lib7zip-53abfeb.org/src/7ZipObjectPtrArray.cpp	2021-05-26 22:04:41.000000000 +0200
+++ lib7zip-53abfeb/src/7ZipObjectPtrArray.cpp	2021-12-29 18:31:45.681682054 +0100
@@ -18,9 +18,9 @@ void C7ZipObjectPtrArray::clear()
 {
     if (m_bAutoRelease)
     {
-        for(C7ZipObjectPtrArray::iterator it = begin(); it != end(); it ++)
+        for(C7ZipObjectPtrArray::iterator it = begin(); it != end();)
         {
-            delete *it;
+            it = erase(it);
         }
     }
 
diff -upNr lib7zip-53abfeb.org/src/CMakeLists.txt lib7zip-53abfeb/src/CMakeLists.txt
--- lib7zip-53abfeb.org/src/CMakeLists.txt	2021-05-26 22:04:41.000000000 +0200
+++ lib7zip-53abfeb/src/CMakeLists.txt	2021-12-29 18:31:45.681682054 +0100
@@ -7,6 +7,10 @@ SET(lib7zip_src
 7ZipCodecInfo.h             7ZipFormatInfo.h            7zipLibrary.cpp             OSFunctions_OS2.h
 )
 
+if ("${CMAKE_C_PLATFORM_ID}" STREQUAL "MinGW")
+    SET(lib7zip_src ${lib7zip_src} GUIDs.h GUIDs.cpp)
+endif()
+
 SET(lib7zip_NODIST_SOURCES ${P7ZIP_SOURCE_DIR}/CPP/Common/MyWindows.cpp
 			   ${P7ZIP_SOURCE_DIR}/CPP/Windows/PropVariant.cpp
 )
diff -upNr lib7zip-53abfeb.org/src/GUIDs.cpp lib7zip-53abfeb/src/GUIDs.cpp
--- lib7zip-53abfeb.org/src/GUIDs.cpp	1970-01-01 01:00:00.000000000 +0100
+++ lib7zip-53abfeb/src/GUIDs.cpp	2021-12-29 18:31:45.681682054 +0100
@@ -0,0 +1,2 @@
+#include <initguid.h>
+#include "GUIDs.h"
diff -upNr lib7zip-53abfeb.org/src/GUIDs.h lib7zip-53abfeb/src/GUIDs.h
--- lib7zip-53abfeb.org/src/GUIDs.h	1970-01-01 01:00:00.000000000 +0100
+++ lib7zip-53abfeb/src/GUIDs.h	2021-12-29 18:31:45.681682054 +0100
@@ -0,0 +1,139 @@
+// This file is based on the following file from the LZMA SDK (http://www.7-zip.org/sdk.html):
+//   ./CPP/7zip/Guid.txt
+#pragma once
+
+
+namespace SevenZip
+{
+namespace intl
+{
+	// IStream.h
+
+	// {23170F69-40C1-278A-0000-000300010000}
+	DEFINE_GUID(IID_ISequentialInStream,
+		0x23170F69, 0x40C1, 0x278A, 0x00, 0x00, 0x00, 0x03, 0x00, 0x01, 0x00, 0x00);
+
+	// {23170F69-40C1-278A-0000-000300010000}
+	DEFINE_GUID(IID_ISequentialOutStream,
+		0x23170F69, 0x40C1, 0x278A, 0x00, 0x00, 0x00, 0x03, 0x00, 0x02, 0x00, 0x00);
+
+	// {23170F69-40C1-278A-0000-000300030000}
+	DEFINE_GUID(IID_IInStream,
+		0x23170F69, 0x40C1, 0x278A, 0x00, 0x00, 0x00, 0x03, 0x00, 0x03, 0x00, 0x00);
+
+	// {23170F69-40C1-278A-0000-000300040000}
+	DEFINE_GUID(IID_IOutStream,
+		0x23170F69, 0x40C1, 0x278A, 0x00, 0x00, 0x00, 0x03, 0x00, 0x04, 0x00, 0x00);
+
+	// {23170F69-40C1-278A-0000-000300060000}
+	DEFINE_GUID(IID_IStreamGetSize,
+		0x23170F69, 0x40C1, 0x278A, 0x00, 0x00, 0x00, 0x03, 0x00, 0x06, 0x00, 0x00);
+
+	// ICoder.h
+	// {23170F69-40C1-278A-0000-000400040000}
+	DEFINE_GUID(IID_ICompressProgressInfo,
+		0x23170F69, 0x40C1, 0x278A, 0x00, 0x00, 0x00, 0x04, 0x00, 0x04, 0x00, 0x00);
+
+    // {23170F69-40C1-278A-0000-000400600000}
+	DEFINE_GUID(IID_ICompressCodecsInfo,
+		0x23170F69, 0x40C1, 0x278A, 0x00, 0x00, 0x00, 0x04, 0x00, 0x60, 0x00, 0x00);
+
+    // {23170F69-40C1-278A-0000-000400610000}
+	DEFINE_GUID(IID_ISetCompressCodecsInfo,
+		0x23170F69, 0x40C1, 0x278A, 0x00, 0x00, 0x00, 0x04, 0x00, 0x61, 0x00, 0x00);
+
+	// IPassword.h
+
+	// {23170F69-40C1-278A-0000-000500100000}
+	DEFINE_GUID(IID_ICryptoGetTextPassword,
+		0x23170F69, 0x40C1, 0x278A, 0x00, 0x00, 0x00, 0x05, 0x00, 0x10, 0x00, 0x00);
+
+	// {23170F69-40C1-278A-0000-000500110000}
+	DEFINE_GUID(IID_ICryptoGetTextPassword2,
+		0x23170F69, 0x40C1, 0x278A, 0x00, 0x00, 0x00, 0x05, 0x00, 0x11, 0x00, 0x00);
+
+	// IArchive.h
+
+	// {23170F69-40C1-278A-0000-000600030000}
+	DEFINE_GUID(IID_ISetProperties,
+		0x23170F69, 0x40C1, 0x278A, 0x00, 0x00, 0x00, 0x06, 0x00, 0x03, 0x00, 0x00);
+
+	// {23170F69-40C1-278A-0000-000600100000}
+	DEFINE_GUID(IID_IArchiveOpenCallback,
+		0x23170F69, 0x40C1, 0x278A, 0x00, 0x00, 0x00, 0x06, 0x00, 0x10, 0x00, 0x00);
+
+	// {23170F69-40C1-278A-0000-000600200000}
+	DEFINE_GUID(IID_IArchiveExtractCallback,
+		0x23170F69, 0x40C1, 0x278A, 0x00, 0x00, 0x00, 0x06, 0x00, 0x20, 0x00, 0x00);
+
+    // {23170F69-40C1-278A-0000-000600300000}
+	DEFINE_GUID(IID_IArchiveOpenVolumeCallback,
+		0x23170F69, 0x40C1, 0x278A, 0x00, 0x00, 0x00, 0x06, 0x00, 0x30, 0x00, 0x00);
+
+    // {23170F69-40C1-278A-0000-000600400000}
+	DEFINE_GUID(IID_IInArchiveGetStream,
+		0x23170F69, 0x40C1, 0x278A, 0x00, 0x00, 0x00, 0x06, 0x00, 0x40, 0x00, 0x00);
+
+    // {23170F69-40C1-278A-0000-000600500000}
+	DEFINE_GUID(IID_IArchiveOpenSetSubArchiveName,
+		0x23170F69, 0x40C1, 0x278A, 0x00, 0x00, 0x00, 0x06, 0x00, 0x50, 0x00, 0x00);
+
+	// {23170F69-40C1-278A-0000-000600600000}
+	DEFINE_GUID(IID_IInArchive,
+		0x23170F69, 0x40C1, 0x278A, 0x00, 0x00, 0x00, 0x06, 0x00, 0x60, 0x00, 0x00);
+
+	// {23170F69-40C1-278A-0000-000600800000}
+	DEFINE_GUID(IID_IArchiveUpdateCallback,
+		0x23170F69, 0x40C1, 0x278A, 0x00, 0x00, 0x00, 0x06, 0x00, 0x80, 0x00, 0x00);
+
+	// {23170F69-40C1-278A-0000-000600820000}
+	DEFINE_GUID(IID_IArchiveUpdateCallback2,
+		0x23170F69, 0x40C1, 0x278A, 0x00, 0x00, 0x00, 0x06, 0x00, 0x82, 0x00, 0x00);
+
+	// {23170F69-40C1-278A-0000-000600A00000}
+	DEFINE_GUID(IID_IOutArchive,
+		0x23170F69, 0x40C1, 0x278A, 0x00, 0x00, 0x00, 0x06, 0x00, 0xA0, 0x00, 0x00);
+
+	// Handler GUIDs
+
+	// {23170F69-40C1-278A-1000-000110010000}
+	DEFINE_GUID(CLSID_CFormatZip,
+		0x23170F69, 0x40C1, 0x278A, 0x10, 0x00, 0x00, 0x01, 0x10, 0x01, 0x00, 0x00);
+
+	// {23170F69-40C1-278A-1000-000110020000}
+	DEFINE_GUID(CLSID_CFormatBZip2,
+		0x23170F69, 0x40C1, 0x278A, 0x10, 0x00, 0x00, 0x01, 0x10, 0x02, 0x00, 0x00);
+
+	// {23170F69-40C1-278A-1000-000110030000}
+	DEFINE_GUID(CLSID_CFormatRar,
+		0x23170F69, 0x40C1, 0x278A, 0x10, 0x00, 0x00, 0x01, 0x10, 0x03, 0x00, 0x00);
+
+	// {23170F69-40C1-278A-1000-000110070000}
+	DEFINE_GUID(CLSID_CFormat7z,
+		0x23170F69, 0x40C1, 0x278A, 0x10, 0x00, 0x00, 0x01, 0x10, 0x07, 0x00, 0x00);
+
+	// {23170F69-40C1-278A-1000-000110080000}
+	DEFINE_GUID(CLSID_CFormatCab,
+		0x23170F69, 0x40C1, 0x278A, 0x10, 0x00, 0x00, 0x01, 0x10, 0x08, 0x00, 0x00);
+
+	// {23170F69-40C1-278A-1000-0001100A0000}
+	DEFINE_GUID(CLSID_CFormatLzma,
+		0x23170F69, 0x40C1, 0x278A, 0x10, 0x00, 0x00, 0x01, 0x10, 0x0A, 0x00, 0x00);
+
+	// {23170F69-40C1-278A-1000-0001100B0000}
+	DEFINE_GUID(CLSID_CFormatLzma86,
+		0x23170F69, 0x40C1, 0x278A, 0x10, 0x00, 0x00, 0x01, 0x10, 0x0B, 0x00, 0x00);
+
+	// {23170F69-40C1-278A-1000-000110E70000}
+	DEFINE_GUID(CLSID_CFormatIso,
+		0x23170F69, 0x40C1, 0x278A, 0x10, 0x00, 0x00, 0x01, 0x10, 0xE7, 0x00, 0x00);
+
+	// {23170F69-40C1-278A-1000-000110EE0000}
+	DEFINE_GUID(CLSID_CFormatTar,
+		0x23170F69, 0x40C1, 0x278A, 0x10, 0x00, 0x00, 0x01, 0x10, 0xEE, 0x00, 0x00);
+
+	// {23170F69-40C1-278A-1000-000110EF0000}
+	DEFINE_GUID(CLSID_CFormatGZip,
+		0x23170F69, 0x40C1, 0x278A, 0x10, 0x00, 0x00, 0x01, 0x10, 0xEF, 0x00, 0x00);
+}
+}
diff -upNr lib7zip-53abfeb.org/src/HelperFuncs.cpp lib7zip-53abfeb/src/HelperFuncs.cpp
--- lib7zip-53abfeb.org/src/HelperFuncs.cpp	2021-05-26 22:04:41.000000000 +0200
+++ lib7zip-53abfeb/src/HelperFuncs.cpp	2021-12-29 18:31:45.681682054 +0100
@@ -2,10 +2,12 @@
 #include "config.h"
 #endif
 
+#if !defined(_WIN32)
 #define BUILD_LIB7ZIP
 #ifndef INITGUID
 #define INITGUID
 #endif
+#endif
 
 #if !defined(_WIN32) && !defined(_OS2)
 #include "CPP/myWindows/StdAfx.h"
diff -upNr lib7zip-53abfeb.org/src/OSFunctions_UnixLike.cpp lib7zip-53abfeb/src/OSFunctions_UnixLike.cpp
--- lib7zip-53abfeb.org/src/OSFunctions_UnixLike.cpp	2021-05-26 22:04:41.000000000 +0200
+++ lib7zip-53abfeb/src/OSFunctions_UnixLike.cpp	2021-12-29 18:31:45.681682054 +0100
@@ -122,13 +122,13 @@ int myselect(const struct dirent * pDir
   {
     closedir( pTmpDir );
 
-    (void)chdir( szEntryName );
+    (void)!chdir( szEntryName );
 
     struct dirent **namelist = NULL;
 
     scandir( ".",&namelist,myselect,alphasort );
 
-    (void)chdir( ".." );
+    (void)!chdir( ".." );
   }
 
   return 0;
@@ -180,6 +180,14 @@ HMODULE Load7ZLibrary(const wstring & na
   lib_search_pathlist.push_back("/usr/lib");
   lib_search_pathlist.push_back("/usr/lib/p7zip");
   lib_search_pathlist.push_back("/usr/local/lib/p7zip");
+
+  lib_search_pathlist.push_back("/usr/local/lib64");
+  lib_search_pathlist.push_back("/usr/lib64");
+  lib_search_pathlist.push_back("/usr/lib64/p7zip");
+  lib_search_pathlist.push_back("/usr/local/lib64/p7zip");
+  // Flatpack support
+  lib_search_pathlist.push_back("/app/lib/p7zip");
+
   lib_search_pathlist.push_back(".");
 
   for(std::vector<const char *>::iterator lib_search_pathlistIt = lib_search_pathlist.begin();
