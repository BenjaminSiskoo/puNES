function(win_static_qt)
	set(extra_compile_flags_tmp "")
	set(extra_libs_tmp "")

	get_target_property(QT_LIB_LOC Qt5::Core IMPORTED_LOCATION_RELEASE)
	get_filename_component(QT_LIB_LOC ${QT_LIB_LOC} DIRECTORY)

	foreach(win_static_lib ${ARGN})
		get_filename_component(file_name ${win_static_lib} NAME)
		message(STATUS "Looking for ${file_name}")
		if(EXISTS ${QT_LIB_LOC}/${win_static_lib})
			message(STATUS "Looking for ${file_name} - found")
			set(extra_libs_tmp ${extra_libs_tmp} ${QT_LIB_LOC}/${win_static_lib})

			if(file_name STREQUAL "libqwindows.a")
				set(extra_compile_flags_tmp "${extra_compile_flags_tmp} -DQT5_PLUGIN_QWINDOWS")
			elseif(file_name STREQUAL "libqwindowsvistastyle.a")
				set(extra_compile_flags_tmp "${extra_compile_flags_tmp} -DQT_PLUGIN_QWINDOWSVISTASTYLE")
				include(CheckLibraryExists)
				check_library_exists(uxtheme main "" UXTHEME_LIB)
				if(UXTHEME_LIB)
					find_library(UXTHEME_LIB ${UXTHEME_LIB})
					if(NOT USBHID_LIB)
						message(FATAL_ERROR "uxtheme library not found")
					endif()
					set(extra_libs_tmp "${extra_libs_tmp} ${UXTHEME_LIB}")
				endif()
			elseif(file_name STREQUAL "libqgif.a")
				set(extra_compile_flags_tmp "${extra_compile_flags_tmp} -DQT_PLUGIN_QGIF")
			elseif(file_name STREQUAL "libqico.a")
				set(extra_compile_flags_tmp "${extra_compile_flags_tmp} -DQT_PLUGIN_QICO")
			elseif(file_name STREQUAL "libqjpeg.a")
				set(extra_compile_flags_tmp "${extra_compile_flags_tmp} -DQT_PLUGIN_QJPEG")
			elseif(file_name STREQUAL "libqsvg.a")
				set(extra_compile_flags_tmp "${extra_compile_flags_tmp} -DQT_PLUGIN_QSVG")
			endif()
		else()
			if(file_name STREQUAL "libqwindows.a")
				message(FATAL_ERROR "libqwindows.a not found")
			else()
				message(STATUS "Looking for ${file_name} - not found")
			endif()
		endif()
	endforeach()

	set(extra_libs_tmp ${extra_libs_tmp} -lws2_32 -limm32)

	set(EXTRA_COMPILE_FLAGS "${EXTRA_COMPILE_FLAGS} ${extra_compile_flags_tmp}" PARENT_SCOPE)
	set(EXTRA_LIBS ${EXTRA_LIBS} ${extra_libs_tmp} PARENT_SCOPE)
endfunction()

